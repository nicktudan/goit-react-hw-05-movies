{"version":3,"file":"static/js/322.b326041d.chunk.js","mappings":"8RAGaA,EAAgBC,EAAAA,GAAAA,IAAH,4DAKbC,EAAiBD,EAAAA,GAAAA,IAAH,yCAIdE,EAAgBF,EAAAA,GAAAA,IAAH,yFAObG,EAAgBH,EAAAA,GAAAA,EAAH,2C,SCTbI,EAAY,SAAC,GAAD,QACvBC,MACEC,EAFqB,EAErBA,KACAC,EAHqB,EAGrBA,MACAC,EAJqB,EAIrBA,YACAC,EALqB,EAKrBA,aACAC,EANqB,EAMrBA,SACAC,EAPqB,EAOrBA,aAPqB,IAQrBC,OAAAA,OARqB,MAQb,GARa,SAWvB,UAACb,EAAD,YACE,SAACE,EAAD,CACEY,IAAG,8CAAyCL,GAC5CM,IAAKP,KAEP,UAACL,EAAD,YACE,iCACGK,QADH,IACGA,EAAAA,EAASD,EADZ,IACmBK,EAAaI,MAAM,EAAG,GADzC,QAGA,UAACZ,EAAD,0BACea,KAAKC,MAAqB,GAAfR,GAD1B,QAGA,sCACA,SAACN,EAAD,UAAgBO,KAChB,oCACA,SAACP,EAAD,UAAgBS,EAAOM,KAAK,aA1BT,E,oBCPZC,GAAenB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,+PAgBZqB,EAAarB,EAAAA,GAAAA,GAAH,wFAMVsB,EAAYtB,EAAAA,GAAAA,GAAH,8FAMTuB,GAAYvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAH,mOACR,SAAAyB,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,IAAvB,ICjBJ,SAASC,IAAgB,IAAD,IAC3BC,EAAYC,EAAAA,GAAAA,QACpB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAO3B,EAAP,KAAc4B,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc7C,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BC,EAAAA,EAAAA,IAAkBT,GAF7C,OAEcU,EAFd,OAGQP,EAASO,GAHjB,gDAKQC,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZC,EACH,GAAE,CAACb,KAGA,iCACI,SAACX,EAAD,CAAcyB,GAAIV,EAAlB,sBACA,SAAC9B,EAAD,CAAWC,MAAOA,KAClB,SAACgB,EAAD,sCACA,UAACC,EAAD,YACI,yBACI,SAACC,EAAD,CAAWqB,GAAG,OAAd,qBAEJ,yBACI,SAACrB,EAAD,CAAWqB,GAAG,UAAd,2BAIR,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAKf,C,mJCnDKC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAD1D,cACCG,EADD,yBAEEA,EAASX,KAAKY,SAFhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBJ,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACoBM,EADpB,YADlB,cACCH,EADD,yBAIEA,EAASX,KAAKY,SAJhB,kEAQA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAiCgB,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCP,IADpD,cACCG,EADD,yBAEEA,EAASX,MAFX,kEAjBPU,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDeyails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const MovieCardWrap = styled.div`\n  display: flex;\n  padding: 20px;\n`;\n\nexport const MovieCardImage = styled.img`\n  width: 360px;\n`;\n\nexport const MovieCardInfo = styled.div`\n  margin-left: 20px;\n  /* & .p {\n    margin: 20px, 0;\n  } */\n`;\n\nexport const MovieCardText = styled.p`\n  margin: 20px 0;\n`;\n","import { PropTypes } from 'prop-types';\n\nimport {\n  MovieCardWrap,\n  MovieCardImage,\n  MovieCardInfo,\n  MovieCardText,\n} from './MovieCard.styled';\n\n\nexport const MovieCard = ({\n  movie: {\n    name,\n    title,\n    poster_path,\n    vote_average,\n    overview,\n    release_date,\n    genres =[],\n  },\n}) => (\n  <MovieCardWrap>\n    <MovieCardImage\n      src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n      alt={title}\n    />\n    <MovieCardInfo>\n      <h2>\n        {title ?? name}({release_date.slice(0, 4)})\n      </h2>\n      <MovieCardText>\n        User Score: {Math.round(vote_average * 10)}%\n      </MovieCardText>\n      <h3>Overview</h3>\n      <MovieCardText>{overview}</MovieCardText>\n      <h3>Genres</h3>\n      <MovieCardText>{genres.join(', ')}</MovieCardText>\n      {/* <MovieCardText>{genres.map(({ name }) => name).join(', ')}</MovieCardText> */}\n    </MovieCardInfo>\n  </MovieCardWrap>\n);\n\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n}","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLinkHref = styled(Link)`\n  color: #ffffff;\n  background-color: #3f3f40;\n  padding: 8px;\n  margin-top: 20px;\n  margin-left: 20px;\n  border-radius: 8px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: red;\n  }\n`;\n\nexport const AboutTitle = styled.h3`\n  padding: 8px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const AboutList = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const AboutLink = styled(NavLink)`\n  /* color: ${props => props.theme.colors.text}; */\n  padding: 8px;\n  margin: 0 20px;\n  margin-bottom: 20px;\n  border-radius: 8px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: red;\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { fetchMovieDetails } from '..//../services/API';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport { Loader } from '..//../components/Loader/Loader';\n\nimport {\n    BackLinkHref,\n    AboutTitle,\n    AboutList,\n    AboutLink,\n} from './MovieDeyails.styled';\n\n\nexport default function MovieDeyails() {\n    const { movieId } = useParams;\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        async function getMovieDeyails() {\n            try {\n                const data = await fetchMovieDetails(movieId);\n                setMovie(data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getMovieDeyails();\n    }, [movieId])\n\n    return (\n        <>\n            <BackLinkHref to={backLinkHref}>Go Back</BackLinkHref>\n            <MovieCard movie={movie} />\n            <AboutTitle>Additional information</AboutTitle>\n            <AboutList>\n                <li>\n                    <AboutLink to=\"cast\">Cast</AboutLink>\n                </li>\n                <li>\n                    <AboutLink to=\"reviews\">Reviews</AboutLink>\n                </li>\n            </AboutList>\n\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n    \n}","import axios from 'axios';\n\nconst API_KEY = 'c633fbd383276868549332293f6b233d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}    \n\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n}   \n\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}  \n\n\nexport async function fetchMovieCredits(id) {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}  \n\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data.results;\n}  \n"],"names":["MovieCardWrap","styled","MovieCardImage","MovieCardInfo","MovieCardText","MovieCard","movie","name","title","poster_path","vote_average","overview","release_date","genres","src","alt","slice","Math","round","join","BackLinkHref","Link","AboutTitle","AboutList","AboutLink","NavLink","props","theme","colors","text","MovieDeyails","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","data","console","log","getMovieDeyails","to","Suspense","fallback","Loader","API_KEY","fetchTrendingMovies","axios","response","results","fetchSearchMovies","query","id"],"sourceRoot":""}