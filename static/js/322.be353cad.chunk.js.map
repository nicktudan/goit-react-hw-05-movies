{"version":3,"file":"static/js/322.be353cad.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDeyails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const MovieCardWrap = styled.div`\n  display: flex;\n  padding: 20px;\n`;\n\nexport const MovieCardImage = styled.img`\n  width: 360px;\n`;\n\nexport const MovieCardInfo = styled.div`\n  margin-left: 20px;\n`;\n\nexport const MovieCardTitle = styled.h3`\n  font-size: 40px;\n`;\n\nexport const MovieCardTitleS = styled.h4`\n  font-size: 32px;\n`;\n\nexport const MovieCardText = styled.p`\n  margin: 20px 0;\n  font-size: 20px;\n`;\n","import { PropTypes } from 'prop-types';\n\nimport {\n  MovieCardWrap,\n  MovieCardImage,\n  MovieCardInfo,\n  MovieCardTitle,\n  MovieCardTitleS,\n  MovieCardText,\n} from './MovieCard.styled';\n\n\nexport const MovieCard = ({\n  movie: {\n    title,\n    original_title,\n    poster_path,\n    vote_average,\n    overview,\n    release_date,\n    genres,\n  },\n}) => {\n  return (\n  <MovieCardWrap>\n    <MovieCardImage\n      src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n      alt={original_title}\n    />\n    <MovieCardInfo>\n      <MovieCardTitle>\n        {original_title ?? title}({release_date.slice(0, 4)})\n      </MovieCardTitle>\n      <MovieCardText>\n        User Score: {Math.round(vote_average * 10)}%\n      </MovieCardText>\n      <MovieCardTitleS>Overview</MovieCardTitleS>\n      <MovieCardText>{overview}</MovieCardText>\n      <MovieCardTitleS>Genres</MovieCardTitleS>\n      <MovieCardText>{genres.map(({ name }) => name).join(', ')}</MovieCardText>\n    </MovieCardInfo>\n  </MovieCardWrap>\n  );\n}\n\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n}","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLinkHref = styled(Link)`\n  padding: 12px 32px;\n  margin-left: 20px;\n  border-radius: 2px;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  text-decoration: none;\n  color: #3f51b5;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #fff;\n    background-color: #303f9f;\n  }\n`;\n\nexport const AboutTitle = styled.h3`\n  padding: 8px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const AboutList = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const AboutLink = styled(NavLink)`\n  padding: 8px 16px;\n  margin: 0 20px;\n  /* min-width: 140px;\n  max-width: 100px; */\n  border-radius: 2px;\n  font-family: inherit;\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  color: #000;\n  background-color: #3f51b5;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #fff;\n    background-color: #303f9f;\n  }\n\n  &.active {\n    color: #303f9f;\n    background-color: #fff;\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { fetchMovieDetails } from '..//../services/API';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport { Loader } from '..//../components/Loader/Loader';\n\nimport {\n  BackLinkHref,\n  AboutTitle,\n  AboutList,\n  AboutLink,\n} from './MovieDeyails.styled';\n\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  \n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId])\n\n\n  return (\n    <>\n      <BackLinkHref to={backLinkHref}>Go Back</BackLinkHref>\n      {movie && <MovieCard movie={movie} />}\n      <AboutTitle>Additional information</AboutTitle>\n      <AboutList>\n        <li>\n          <AboutLink to=\"cast\">Cast</AboutLink>\n        </li>\n        <li>\n          <AboutLink to=\"reviews\">Reviews</AboutLink>\n        </li>\n      </AboutList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = 'c633fbd383276868549332293f6b233d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}    \n\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n}   \n\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}  \n\n\nexport async function fetchMovieCredits(id) {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}  \n\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}  \n"],"names":["MovieCardWrap","styled","MovieCardImage","MovieCardInfo","MovieCardTitle","MovieCardTitleS","MovieCardText","MovieCard","movie","title","original_title","poster_path","vote_average","overview","release_date","genres","src","alt","slice","Math","round","map","name","join","BackLinkHref","Link","AboutTitle","AboutList","AboutLink","NavLink","MovieDetails","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","data","console","log","getMovieDetails","to","Suspense","fallback","Loader","API_KEY","fetchTrendingMovies","axios","response","results","fetchSearchMovies","query","id","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}